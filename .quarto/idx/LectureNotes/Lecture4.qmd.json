{"title":"Lecture 4","markdown":{"yaml":{"title":"Lecture 4","author":"Julia Schedler","format":{"html":{"code-fold":"show"}},"slide-number":true,"scrollable":true,"filters":["timer"]},"headingText":"Slides with Activity Solutions","containsRefs":false,"markdown":"\n\n::: {.callout-note collapse=\"true\" appearance=\"simple\" icon=\"false\"}\n\n[View slides in full screen](Slides/Lecture4/){target=\"_blank\"}\n:::\n\n::: {.callout-note collapse=\"true\" appearance=\"simple\" icon=\"false\"}\n## Link to Notes Template\n[Lecture4Template.qmd](ActivityTemplates/Lecture4Template.qmd)\n:::\n\n## Recap\n\n::: hidden\n$$\n\\newcommand\\E{{\\mathbb{E}}}\n$$\n:::\n\n-   Decomposing time series\n-   Stationarity (theoretically and with data)\n-   Some activities\n\n## Today\n\n-   Finish up activities from Lecture 3\n-   Trend stationarity\n-   Visualizing autocovariance (third attempt)\n-   Detrending\n-   \"Office hours\"\n\n## Reminders\n\n-   Syllabus participation policy\n-   Assignments: Going forward, must submit **rendered pdf** of code portion. (if you want to be nice to me, do this for Assignment 2, but starts with Assignment 3)\n-   Late quizzes: Going forward: Email me ahead of time, otherwise it's a 0\n-   Exam details: No use of computer, code will be covered but basic, notes sheet is allowed, practice test will be provided\n\n## [Activity 1: Export Price of Salmon (Example 3.1)]{.r-fit-text} {.smaller}\n\n```{r}\n#| label: activity-1\n#| echo: true\n#| collapse: true\n#| code-fold: true\nlibrary(astsa)\n\nsummary(fit <- lm(salmon~time(salmon), na.action=NULL))\ntsplot(salmon, col=4, ylab=\"USD per KG\", main=\"Salmon Export Price\")\nabline(fit)\n\n```\n\n## [Activity 1: Export Price of Salmon (Example 3.1)]{.r-fit-text} {.smaller}\n\n1.  Does this time series appear stationary?\n\n2.  The (mathematical) equation in the book for the trend line above is:\n\n    $$\n    x_t = \\beta_0 + \\beta_1z_t + w_t, z_t = 2003\\frac{8}{12}, 2001\\frac{8}{12}, \\dots, 2017\\frac{5}{12}\n    $$\n\n    -   There is a typo in this equation. Correct the typo. (hint: examine to the first few entries of `time(salmon)`\n\n    -   Why are there fractions of the year? Explain what the fractional values mean and describe how they appear in the data set within R.\n\n3.  Interpret the estimate of the slope.\n\n## [Activity 2: Trend Stationarity (Example 2.19)]{.r-fit-text} {.smaller}\n\nConsider the time series model $$x_t = \\beta t + y_t$$ Assume $y_t$ is stationary with mean function $\\mu_y$ and and autocovariance function $\\gamma_y(h)$\n\n-   Compare this equation to the regression equation in the last example.\n-   What are the mean function and autocovariance function of $x_t$?\n\n## Trend stationarity model\n\nA time series which is nonstationary in the mean but is stationary in the autocovariance is sometimes called **Trend stationarity**.\n\n-   I'm actually not sure if it just refers to linear trends?? I'll ask people at my conference\n\n# Visualizing (possibly nonstationary) Autocorrelation functions\n\n## Visualizing the autocovariance for trend stationarity\n\n```{r}\n#| label: show-error-dists\n#| code-fold: true\n\nlibrary(ggplot2)\nset.seed(807)\nt <- seq(1, 10, 1)\nx_t <- 0.5*t \n#x <- x - mean(x)\n#y <- y - mean(y)\n\ndf <- data.frame(t, x_t)\n\n# For every row in `df`, compute a rotated normal density centered at `y` and shifted by `x`\ncurves <- lapply(seq_len(NROW(df)), function(i) {\n  mu <- df$x_t[i]\n  range <- mu + c(-1.5, 1.5)\n  seq <- seq(range[1], range[2], length.out = 100)\n  data.frame(\n    t = -1 * dnorm(seq, mean = mu, sd = 0.5) + df$t[i],\n    x_t = seq,\n    grp = i\n  )\n})\n# Combine above densities in one data.frame\ncurves <- do.call(rbind, curves)\n\nnew.x = seq(from = 1, to = 10, by = .1)\nnew.y = .5*new.x\ntrend_line <- data.frame(x = new.x,\n                       y = new.y)\nggplot(df, aes(t, x_t)) +\n  geom_point(col = \"blueviolet\", pch = 17) +\n  #geom_line() +\n  # The path draws the curve\n  geom_path(data = curves, aes(group = grp)) +\n  geom_line(data = trend_line, aes(x=x,y=y), col = \"blueviolet\") +\n  lims(y = c(-2,10)) +\n  scale_x_continuous(breaks = seq(1, 10, by = 1)) +\n  theme_minimal() + \n  theme( # remove the vertical grid lines\n           panel.grid = element_blank() ,\n           # explicitly set the horizontal lines (or they will disappear too)\n           panel.grid.major.x = element_line( size=.1, color=\"black\" )) +   \n  geom_rect(aes(xmin = 1.1, xmax = 2.1, ymin = -1, ymax = 3), fill = NA, col = \"blue\")+   \n  geom_rect(aes(xmin = 7.1, xmax = 8.1, ymin = 2, ymax = 6), fill = NA, col = \"magenta\")\n  # The polygon does the shading. We can use `oob_squish()` to set a range.\n  #geom_polygon(data = curves, aes(y = scales::oob_squish(y, c(0, Inf)),group = grp))\n```\n\n## [Simulate many time series from the trend stationarity model]{.r-fit-text} {.smaller}\n\n```{r}\n#| code-fold: true\n\nset.seed(807)\nTime <- 10\nn_sim <- 100\nall_series = matrix(rep(NA, times = n_sim*Time), nrow = Time)\nfor(i in 1:n_sim){\n  cs = 0.25*1:Time        # same thing \n  w  = rnorm(Time + 50,0,1)\n  #w_dep = stats::filter(w, filter = rep(1/3,3))[2:(Time + 1)]\n  #all_series[,i] <- cs + w_dep\n  all_series[,i] <- cs + w[2:(Time+1)]\n  #names(all_series)[i] <- paste(\"sim_\", i)\n  \n}\nfit <- lm(all_series[,1]~time(all_series[,1]), na.action=NULL)\ntsplot(all_series[,1], main = \"One simulated Time series\", type = \"b\", col = c(\"black\", \"blue\", rep(\"black\", times = 5), \"magenta\", \"black\", \"black\"), pch = 16, cex = 3)\nabline(fit)\n\n```\n\n## [Simulate many time series from the trend stationarity model]{.r-fit-text} {.smaller}\n\n```{r}\n#| code-fold: true\npar(mfrow = c(2,2))\nfor(i in 1:4){\n  fit <- lm(all_series[,i]~time(all_series[,i]), na.action=NULL)\n  tsplot(all_series[,i], type = \"b\", col = c(\"black\", \"blue\", rep(\"black\", times = 5), \"magenta\", \"black\", \"black\"), pch = 16, cex = 3, ylim = c(-3,6))\n  abline(fit)\n\n}\n```\n\n## [Simulate many time series from the trend stationarity model]{.r-fit-text} {.smaller}\n\n```{r}\n#| label: trend-stationarity-simulate\n#| echo: true\n#| collapse: true\n#| code-fold: true\n\ntsplot(all_series, spaghetti = TRUE, main = \"100 Simuated Trend Stationary Time Series\", type = \"b\")\nrect(xleft = 1.5, xright = 2.5, ybottom = -2, ytop = 4, border = \"blue\", lwd = 2)\nrect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = \"magenta\", lwd = 2)\n\n```\n\n## [Marginal and Joint Distributions t=8 and s=2]{.r-fit-text} {.smaller}\n\n```{r}\n#| code-fold: true\ni = 2\nx_comp <- all_series[i,]\nx_8 <- all_series[8,]\n\npar(mfrow = c(2,2))\nhist(x_comp, col = \"blue\", main = paste(\"Histogram of simulations at t=\", i), xlab = paste(\"x_\",i))\nhist(x_8, col = \"magenta\", main = paste(\"Histogram of simulations at t=8\"), xlab = \"x_8\")\nplot(x_comp, x_8, col = \"purple\", pch = 16, main = \"Joint Distribution\")\nabline(lm(x_8~x_comp))\n\n```\n\n## Marginal and Joint Distributions\n\n```{r}\n#| code-fold: true\nlibrary(ggplot2)\nlibrary(ggExtra)\nx <- data.frame(x_comp, x_8)\n# Save the scatter plot in a variable\np <- ggplot(x, aes(x = x_comp, y = x_8)) +\n  geom_point(col = \"purple\") + xlim(-3,6) + ylim(-3,6)+ \n  geom_text(aes(x = 2, y = -1, label = paste(\"rho(\",i,\",8) = \\n cor(x_\",i,\", x_8) = \", round(cor(x_comp, x_8),3)), size = 6)) + coord_fixed() \n\n# Arguments for each marginal histogram\nggMarginal(p, type = \"density\", adjust = 2,\n           xparams = list(col = \"blue\", fill = \"blue\"),\n           yparams = list(col = \"magenta\", fill = \"magenta\"))\n```\n\n## Do this for all possible combos of $s$ and $t$\n\n[View slides in full screen](Slides/SimulateAutocov/){target=\"_blank\"}\n\n## Visualizing the correlations\n\n```{r}\n#| code-fold: true\ncors <- apply(all_series, 1, function(x){cor(x, all_series[8,])})\nhist(cors, breaks = seq(-1, 1, by = .1), main = \"Correlation between simulations for x_8 and x_i\")\n```\n\n## Are these all the correlations?\n\nNo, just pairwise with $x_8$. We could do all possible pairs:\n\n```{r}\n#| code-fold: true\nlibrary(GGally)\nggpairs(data.frame(t(all_series)))\n```\n\n## Distribution of all the correlations:\n\n```{r}\n#| code-fold: true\ncoords <- t(combn(10,2))\ncors <- NULL\nfor(i in 1:nrow(coords)){\n  cors <- c(cors, cor(all_series[coords[i,1],], all_series[coords[i,2],]))\n}\ncors <- c(cors, rep(1, times = 10))\nhist(cors, breaks = seq(-1, 1, by = .1), main = \"Correlation between simulations for x_s and x_t\")\n```\n\n# 3D plots\n\n## 3D version of histogram (includes $s-t$ plane)\n\n```{r}\n#| code-fold: true\ncoords <- expand.grid(1:Time, 1:Time)\nnames(coords) <- c(\"s\", \"t\") \ncoords$cor <- NA\ncoords$pval <- NA\ncor_mat_theoretical <- cor_mat <- matrix(rep(NA, times = Time*Time), nrow = Time)\nfor(i in 1:nrow(coords)){\n  out <- cor.test((all_series[coords[i,1],]), (all_series[coords[i,2],]))\n  if(coords[i,1]==coords[i,2]){\n    coords$cor[i] <- 1\n    coords$pval[i] <- 0\n    cor_mat[coords[i,1], coords[i,2]] <- 1\n    cor_mat_theoretical[coords[i,1], coords[i,2]] <- 1\n  }else{\n    coords$cor[i] <- out$estimate\n    coords$pval[i] <- out$p.value\n    cor_mat[coords[i,1], coords[i,2]] <- out$estimate\n    cor_mat_theoretical[coords[i,1], coords[i,2]] <- 0\n    \n  }\n}\n\nlibrary(plotly)\nplot_ly(coords,\n        x= ~s, y=~t, z=~cor, \n        type = 'scatter3d', mode = \"markers\", size = .1)\n```\n\n## [Simulated auto correlation function $\\hat{\\gamma}_x(h)$ (with a blanket)]{.r-fit-text}\n\n```{r}\n#| code-fold: true\n## \"drape a blanket over it to see the pattern better\"\nfig <- plot_ly(z = ~cor_mat)\nfig %>% add_surface()\n```\n\n## [Theoretical $\\hat{\\gamma}_x(h)$ (using the derived formula (with a blanket)]{.r-fit-text}\n\n```{r}\n#| code-fold: true\n# Theoretical function\nfig <- plot_ly(z = ~cor_mat_theoretical)\nfig %>% add_surface()\n\n```\n\n# Detrending\n\n## Detrending\n\nIf a process is trend stationary (nonstationary in the mean, but stationary in the variance), can we just subtract off the trend and get back a stationary time series?\n\nYes, and that's called **detrending**\n\n## [Activity 3: Detrending a commodity (Example 3.7)]{.r-fit-text} {.smaller}\n\n-   Given the code to generate the plot with the trend line, how would you view the equation of the trend line?\n-   Visualize the de-trended series\n-   Compute the acf of the salmon series and the detrended series. What do you notice?\n\n## Next time\n\n-   Cross-correlation and regression with multiple time series ($x_t$ on x-axis instead of $t$ on x-axis like with the salmon)\n-   Activities and examples\n-   Smoothing\n","srcMarkdownNoYaml":"\n\n::: {.callout-note collapse=\"true\" appearance=\"simple\" icon=\"false\"}\n## Slides with Activity Solutions\n\n[View slides in full screen](Slides/Lecture4/){target=\"_blank\"}\n:::\n\n::: {.callout-note collapse=\"true\" appearance=\"simple\" icon=\"false\"}\n## Link to Notes Template\n[Lecture4Template.qmd](ActivityTemplates/Lecture4Template.qmd)\n:::\n\n## Recap\n\n::: hidden\n$$\n\\newcommand\\E{{\\mathbb{E}}}\n$$\n:::\n\n-   Decomposing time series\n-   Stationarity (theoretically and with data)\n-   Some activities\n\n## Today\n\n-   Finish up activities from Lecture 3\n-   Trend stationarity\n-   Visualizing autocovariance (third attempt)\n-   Detrending\n-   \"Office hours\"\n\n## Reminders\n\n-   Syllabus participation policy\n-   Assignments: Going forward, must submit **rendered pdf** of code portion. (if you want to be nice to me, do this for Assignment 2, but starts with Assignment 3)\n-   Late quizzes: Going forward: Email me ahead of time, otherwise it's a 0\n-   Exam details: No use of computer, code will be covered but basic, notes sheet is allowed, practice test will be provided\n\n## [Activity 1: Export Price of Salmon (Example 3.1)]{.r-fit-text} {.smaller}\n\n```{r}\n#| label: activity-1\n#| echo: true\n#| collapse: true\n#| code-fold: true\nlibrary(astsa)\n\nsummary(fit <- lm(salmon~time(salmon), na.action=NULL))\ntsplot(salmon, col=4, ylab=\"USD per KG\", main=\"Salmon Export Price\")\nabline(fit)\n\n```\n\n## [Activity 1: Export Price of Salmon (Example 3.1)]{.r-fit-text} {.smaller}\n\n1.  Does this time series appear stationary?\n\n2.  The (mathematical) equation in the book for the trend line above is:\n\n    $$\n    x_t = \\beta_0 + \\beta_1z_t + w_t, z_t = 2003\\frac{8}{12}, 2001\\frac{8}{12}, \\dots, 2017\\frac{5}{12}\n    $$\n\n    -   There is a typo in this equation. Correct the typo. (hint: examine to the first few entries of `time(salmon)`\n\n    -   Why are there fractions of the year? Explain what the fractional values mean and describe how they appear in the data set within R.\n\n3.  Interpret the estimate of the slope.\n\n## [Activity 2: Trend Stationarity (Example 2.19)]{.r-fit-text} {.smaller}\n\nConsider the time series model $$x_t = \\beta t + y_t$$ Assume $y_t$ is stationary with mean function $\\mu_y$ and and autocovariance function $\\gamma_y(h)$\n\n-   Compare this equation to the regression equation in the last example.\n-   What are the mean function and autocovariance function of $x_t$?\n\n## Trend stationarity model\n\nA time series which is nonstationary in the mean but is stationary in the autocovariance is sometimes called **Trend stationarity**.\n\n-   I'm actually not sure if it just refers to linear trends?? I'll ask people at my conference\n\n# Visualizing (possibly nonstationary) Autocorrelation functions\n\n## Visualizing the autocovariance for trend stationarity\n\n```{r}\n#| label: show-error-dists\n#| code-fold: true\n\nlibrary(ggplot2)\nset.seed(807)\nt <- seq(1, 10, 1)\nx_t <- 0.5*t \n#x <- x - mean(x)\n#y <- y - mean(y)\n\ndf <- data.frame(t, x_t)\n\n# For every row in `df`, compute a rotated normal density centered at `y` and shifted by `x`\ncurves <- lapply(seq_len(NROW(df)), function(i) {\n  mu <- df$x_t[i]\n  range <- mu + c(-1.5, 1.5)\n  seq <- seq(range[1], range[2], length.out = 100)\n  data.frame(\n    t = -1 * dnorm(seq, mean = mu, sd = 0.5) + df$t[i],\n    x_t = seq,\n    grp = i\n  )\n})\n# Combine above densities in one data.frame\ncurves <- do.call(rbind, curves)\n\nnew.x = seq(from = 1, to = 10, by = .1)\nnew.y = .5*new.x\ntrend_line <- data.frame(x = new.x,\n                       y = new.y)\nggplot(df, aes(t, x_t)) +\n  geom_point(col = \"blueviolet\", pch = 17) +\n  #geom_line() +\n  # The path draws the curve\n  geom_path(data = curves, aes(group = grp)) +\n  geom_line(data = trend_line, aes(x=x,y=y), col = \"blueviolet\") +\n  lims(y = c(-2,10)) +\n  scale_x_continuous(breaks = seq(1, 10, by = 1)) +\n  theme_minimal() + \n  theme( # remove the vertical grid lines\n           panel.grid = element_blank() ,\n           # explicitly set the horizontal lines (or they will disappear too)\n           panel.grid.major.x = element_line( size=.1, color=\"black\" )) +   \n  geom_rect(aes(xmin = 1.1, xmax = 2.1, ymin = -1, ymax = 3), fill = NA, col = \"blue\")+   \n  geom_rect(aes(xmin = 7.1, xmax = 8.1, ymin = 2, ymax = 6), fill = NA, col = \"magenta\")\n  # The polygon does the shading. We can use `oob_squish()` to set a range.\n  #geom_polygon(data = curves, aes(y = scales::oob_squish(y, c(0, Inf)),group = grp))\n```\n\n## [Simulate many time series from the trend stationarity model]{.r-fit-text} {.smaller}\n\n```{r}\n#| code-fold: true\n\nset.seed(807)\nTime <- 10\nn_sim <- 100\nall_series = matrix(rep(NA, times = n_sim*Time), nrow = Time)\nfor(i in 1:n_sim){\n  cs = 0.25*1:Time        # same thing \n  w  = rnorm(Time + 50,0,1)\n  #w_dep = stats::filter(w, filter = rep(1/3,3))[2:(Time + 1)]\n  #all_series[,i] <- cs + w_dep\n  all_series[,i] <- cs + w[2:(Time+1)]\n  #names(all_series)[i] <- paste(\"sim_\", i)\n  \n}\nfit <- lm(all_series[,1]~time(all_series[,1]), na.action=NULL)\ntsplot(all_series[,1], main = \"One simulated Time series\", type = \"b\", col = c(\"black\", \"blue\", rep(\"black\", times = 5), \"magenta\", \"black\", \"black\"), pch = 16, cex = 3)\nabline(fit)\n\n```\n\n## [Simulate many time series from the trend stationarity model]{.r-fit-text} {.smaller}\n\n```{r}\n#| code-fold: true\npar(mfrow = c(2,2))\nfor(i in 1:4){\n  fit <- lm(all_series[,i]~time(all_series[,i]), na.action=NULL)\n  tsplot(all_series[,i], type = \"b\", col = c(\"black\", \"blue\", rep(\"black\", times = 5), \"magenta\", \"black\", \"black\"), pch = 16, cex = 3, ylim = c(-3,6))\n  abline(fit)\n\n}\n```\n\n## [Simulate many time series from the trend stationarity model]{.r-fit-text} {.smaller}\n\n```{r}\n#| label: trend-stationarity-simulate\n#| echo: true\n#| collapse: true\n#| code-fold: true\n\ntsplot(all_series, spaghetti = TRUE, main = \"100 Simuated Trend Stationary Time Series\", type = \"b\")\nrect(xleft = 1.5, xright = 2.5, ybottom = -2, ytop = 4, border = \"blue\", lwd = 2)\nrect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = \"magenta\", lwd = 2)\n\n```\n\n## [Marginal and Joint Distributions t=8 and s=2]{.r-fit-text} {.smaller}\n\n```{r}\n#| code-fold: true\ni = 2\nx_comp <- all_series[i,]\nx_8 <- all_series[8,]\n\npar(mfrow = c(2,2))\nhist(x_comp, col = \"blue\", main = paste(\"Histogram of simulations at t=\", i), xlab = paste(\"x_\",i))\nhist(x_8, col = \"magenta\", main = paste(\"Histogram of simulations at t=8\"), xlab = \"x_8\")\nplot(x_comp, x_8, col = \"purple\", pch = 16, main = \"Joint Distribution\")\nabline(lm(x_8~x_comp))\n\n```\n\n## Marginal and Joint Distributions\n\n```{r}\n#| code-fold: true\nlibrary(ggplot2)\nlibrary(ggExtra)\nx <- data.frame(x_comp, x_8)\n# Save the scatter plot in a variable\np <- ggplot(x, aes(x = x_comp, y = x_8)) +\n  geom_point(col = \"purple\") + xlim(-3,6) + ylim(-3,6)+ \n  geom_text(aes(x = 2, y = -1, label = paste(\"rho(\",i,\",8) = \\n cor(x_\",i,\", x_8) = \", round(cor(x_comp, x_8),3)), size = 6)) + coord_fixed() \n\n# Arguments for each marginal histogram\nggMarginal(p, type = \"density\", adjust = 2,\n           xparams = list(col = \"blue\", fill = \"blue\"),\n           yparams = list(col = \"magenta\", fill = \"magenta\"))\n```\n\n## Do this for all possible combos of $s$ and $t$\n\n[View slides in full screen](Slides/SimulateAutocov/){target=\"_blank\"}\n\n## Visualizing the correlations\n\n```{r}\n#| code-fold: true\ncors <- apply(all_series, 1, function(x){cor(x, all_series[8,])})\nhist(cors, breaks = seq(-1, 1, by = .1), main = \"Correlation between simulations for x_8 and x_i\")\n```\n\n## Are these all the correlations?\n\nNo, just pairwise with $x_8$. We could do all possible pairs:\n\n```{r}\n#| code-fold: true\nlibrary(GGally)\nggpairs(data.frame(t(all_series)))\n```\n\n## Distribution of all the correlations:\n\n```{r}\n#| code-fold: true\ncoords <- t(combn(10,2))\ncors <- NULL\nfor(i in 1:nrow(coords)){\n  cors <- c(cors, cor(all_series[coords[i,1],], all_series[coords[i,2],]))\n}\ncors <- c(cors, rep(1, times = 10))\nhist(cors, breaks = seq(-1, 1, by = .1), main = \"Correlation between simulations for x_s and x_t\")\n```\n\n# 3D plots\n\n## 3D version of histogram (includes $s-t$ plane)\n\n```{r}\n#| code-fold: true\ncoords <- expand.grid(1:Time, 1:Time)\nnames(coords) <- c(\"s\", \"t\") \ncoords$cor <- NA\ncoords$pval <- NA\ncor_mat_theoretical <- cor_mat <- matrix(rep(NA, times = Time*Time), nrow = Time)\nfor(i in 1:nrow(coords)){\n  out <- cor.test((all_series[coords[i,1],]), (all_series[coords[i,2],]))\n  if(coords[i,1]==coords[i,2]){\n    coords$cor[i] <- 1\n    coords$pval[i] <- 0\n    cor_mat[coords[i,1], coords[i,2]] <- 1\n    cor_mat_theoretical[coords[i,1], coords[i,2]] <- 1\n  }else{\n    coords$cor[i] <- out$estimate\n    coords$pval[i] <- out$p.value\n    cor_mat[coords[i,1], coords[i,2]] <- out$estimate\n    cor_mat_theoretical[coords[i,1], coords[i,2]] <- 0\n    \n  }\n}\n\nlibrary(plotly)\nplot_ly(coords,\n        x= ~s, y=~t, z=~cor, \n        type = 'scatter3d', mode = \"markers\", size = .1)\n```\n\n## [Simulated auto correlation function $\\hat{\\gamma}_x(h)$ (with a blanket)]{.r-fit-text}\n\n```{r}\n#| code-fold: true\n## \"drape a blanket over it to see the pattern better\"\nfig <- plot_ly(z = ~cor_mat)\nfig %>% add_surface()\n```\n\n## [Theoretical $\\hat{\\gamma}_x(h)$ (using the derived formula (with a blanket)]{.r-fit-text}\n\n```{r}\n#| code-fold: true\n# Theoretical function\nfig <- plot_ly(z = ~cor_mat_theoretical)\nfig %>% add_surface()\n\n```\n\n# Detrending\n\n## Detrending\n\nIf a process is trend stationary (nonstationary in the mean, but stationary in the variance), can we just subtract off the trend and get back a stationary time series?\n\nYes, and that's called **detrending**\n\n## [Activity 3: Detrending a commodity (Example 3.7)]{.r-fit-text} {.smaller}\n\n-   Given the code to generate the plot with the trend line, how would you view the equation of the trend line?\n-   Visualize the de-trended series\n-   Compute the acf of the salmon series and the detrended series. What do you notice?\n\n## Next time\n\n-   Cross-correlation and regression with multiple time series ($x_t$ on x-axis instead of $t$ on x-axis like with the salmon)\n-   Activities and examples\n-   Smoothing\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"filters":["timer"],"output-file":"Lecture4.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","theme":"cosmo","title":"Lecture 4","author":"Julia Schedler","slide-number":true,"scrollable":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}