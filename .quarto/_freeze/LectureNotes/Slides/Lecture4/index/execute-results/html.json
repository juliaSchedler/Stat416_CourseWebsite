{
  "hash": "5dc12b16b1fdd8bf8d70a62014e16c9b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lecture 4\"\nauthor: Julia Schedler\nformat: revealjs\nslide-number: true\nscrollable: true\nfilters: \n  - timer\n---\n\n\n## Recap\n\n::: hidden\n$$\n\\newcommand\\E{{\\mathbb{E}}}\n$$\n:::\n\n-   Decomposing time series\n-   Stationarity (theoretically and with data)\n-   Some activities\n\n## Today\n- Finish up activities from Lecture 3\n- Trend stationarity\n- Visualizing autocovariance (third attempt)\n- \"Office hours\"\n\n## Reminders{.smaller}\n- Syllabus participation policy\n- Assignments: Going forward, must submit **rendered pdf** of code portion. (if you want to be nice to me, do this for Assignment 2, but starts with Assignment 3)\n- Late quizzes: Going forward: Email me ahead of time, otherwise it's a 0 \n- Exam details: No use of computer, code will be covered but basic, notes sheet is allowed, practice test will be provided\n\n## [Activity 1: Export Price of Salmon (Example 3.1)]{.r-fit-text}{.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(astsa)\n\nsummary(fit <- lm(salmon~time(salmon), na.action=NULL))\n## \n## Call:\n## lm(formula = salmon ~ time(salmon), na.action = NULL)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -1.69187 -0.62453 -0.07024  0.51561  2.34959 \n## \n## Coefficients:\n##                Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)  -503.08947   34.44164  -14.61   <2e-16 ***\n## time(salmon)    0.25290    0.01713   14.76   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.8814 on 164 degrees of freedom\n## Multiple R-squared:  0.5706,\tAdjusted R-squared:  0.568 \n## F-statistic: 217.9 on 1 and 164 DF,  p-value: < 2.2e-16\ntsplot(salmon, col=4, ylab=\"USD per KG\", main=\"Salmon Export Price\")\nabline(fit)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/activity-1-1.png){width=960}\n:::\n:::\n\n\n## [Activity 1: Export Price of Salmon (Example 3.1)]{.r-fit-text}{.smaller}\n::: columns\n::: {.column width=\"70%\"}\n1.  Does this time series appear stationary?\n\n2.  The (mathematical) equation in the book for the trend line above is:\n\n    $$\n    x_t = \\beta_0 + \\beta_1z_t + w_t, z_t = 2003\\frac{8}{12}, 2001\\frac{8}{12}, \\dots, 2017\\frac{5}{12}\n    $$\n\n    -   There is a typo in this equation. Correct the typo. (hint: examine to the first few entries of `time(salmon)`\n\n    -   Why are there fractions of the year? Explain what the fractional values mean and describe how they appear in the data set within R.\n\n3.  Interpret the estimate of the slope.\n:::\n::: {.column width=\"30%\"}\n\n::: {#Salmon .timer seconds=\"300\" starton=\"interaction\"}\n:::\n:::\n:::\n\n## [Activity 1: Export Price of Salmon (Example 3.1)]{.r-fit-text}{.smaller}\n\n1.  Does this time series appear stationary?\n\n**No, the mean function is clearly increasing.**\n\n2.  The (mathematical) equation in the book for the trend line above is:\n\n    $$\n    x_t = \\beta_0 + \\beta_1z_t + w_t, z_t = 2003\\frac{8}{12}, 2001\\frac{8}{12}, \\dots, 2017\\frac{5}{12}\n    $$\n\n    -   There is a typo in this equation. Correct the typo. (hint: examine to the first few entries of `time(salmon)`\n\n\n        ::: {.cell}\n        ::: {.cell-output .cell-output-stdout}\n        \n        ```\n        [1] 2003.667 2003.750 2003.833 2003.917 2004.000 2004.083\n        ```\n        \n        \n        :::\n        \n        ::: {.cell-output .cell-output-stdout}\n        \n        ```\n        [1] 2003.667 2003.750 2003.833 2003.917 2004.000 2004.083\n        ```\n        \n        \n        :::\n        :::\n\n\n        **The typo is the second year, it should be** $2003\\frac{9}{12}$\n\n    -   Why are there fractions of the year? Explain what the fractional values mean and describe how they appear in the data set within R.\n\n        **Note that we are dividing by 12, so the fractions represent the months. Based on the values of `time(salmon)`, January corresponds to** $\\frac{0}{12}$**, so for example September is represented as** $\\frac{8}{12}$**.**\n\n3.  Interpret the estimate of the slope.\n\n         \n**Each year, the expected export price of Norwegian salmon increases by 0.2592 USD per kg**\n\n**Each month, the export price of Norwegian salmon increases by 0.2592/12 USD per kg on average**\n\n\n## [Activity 2: Trend Stationarity (Example 2.19)]{.r-fit-text}{.smaller}\nConsider the time series model\n$$x_t = \\beta t + y_t$$\nAssume $y_t$ is stationary with mean function $\\mu_y$ and and autocovariance function $\\gamma_y(h)$\n\n- Compare this equation to the regression equation in the last example.\n- What are the mean function and autocovariance function of $x_t$?\n\n::: {#Trend .timer seconds=\"300\" starton=\"interaction\"}\n:::\n\n## [Activity 2 Solutions: Trend Stationarity (Example 2.19)]{.r-fit-text}{.smaller}\nConsider the time series model\n$$x_t = \\beta t + y_t$$\nAssume $y_t$ is stationary with mean function $\\mu_y$ and and autocovariance function $\\gamma_y(h)$\n\n- Compare this equation to the regression equation in the last example.\n\n**The equations are similar, with $x_t$ being the same, $\\beta_1 = \\beta$, $\\beta_0 = 0$, and $w_t = y_t$, and $z_t = t$.**\n- What are the mean function and autocovariance function of $x_t$?\n\n**For the Mean**\n\n$$\n\\E(x_t)  = \\E(\\beta t + y_t) = \\E(\\beta t) + \\E(y_t) = \\beta t + \\mu_y\n$$\n**For the Autocovariance**\n$$\n\\begin{align}\n\\gamma_x(h) = cov(x_{t+h}, x_t) &= \\E[(x_{t+h} - \\mu_{x,t+h})(x_t - \\mu_{x,t})] \\\\\n&= \\E[\\left( [\\beta (t+h) + y_{t+h}] - [\\beta (t+h) + \\mu_y] \\right)\\left( [\\beta (t) + y_{t}] - [\\beta (t) + \\mu_y] \\right)] \\\\\n&=  \\E[(y_{t+h} - \\mu_y)(y_t - \\mu_y)] \\\\\n&= \\gamma_y(h)\n\\end{align}\n$$\n\n## Trend stationarity model\nA time series which is nonstationary in the mean but is stationary in the autocovariance is sometimes called **Trend stationarity**.\n\n- I'm actually not sure if it just refers to linear trends?? I'll ask people at my conference\n\n## Visualizing the autocovariance for trend stationarity\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/show-error-dists-1.png){width=960}\n:::\n:::\n\n\n## [Simulate many time series from the trend stationarity model]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n## [Simulate many time series from the trend stationarity model]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n## [Simulate many time series from the trend stationarity model]{.r-fit-text}{.smaller}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntsplot(all_series, spaghetti = TRUE, main = \"100 Simuated Trend Stationary Time Series\", type = \"b\")\nrect(xleft = 1.5, xright = 2.5, ybottom = -2, ytop = 4, border = \"blue\", lwd = 2)\nrect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = \"magenta\", lwd = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/trend-stationarity-simulate-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n\n## [Marginal and Joint Distributions t=8 and s=2]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## Marginal and Joint Distributions\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n# Simulations\n\n## All Simulated Time Series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## [Marginal and Joint Distributions t=8 and s = 1]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## All Simulated Time Series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## [Marginal and Joint Distributions t=8 and s = 2]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## All Simulated Time Series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n## [Marginal and Joint Distributions t=8 and s = 3]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## All Simulated Time Series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n## [Marginal and Joint Distributions t=8 and s = 4]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n## All Simulated Time Series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n## [Marginal and Joint Distributions t=8 and s = 5]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n## All Simulated Time Series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n## [Marginal and Joint Distributions t=8 and s = 6]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n## All Simulated Time Series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n## [Marginal and Joint Distributions t=8 and s = 7]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n## All Simulated Time Series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n## [Marginal and Joint Distributions t=8 and s = 8]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n## All Simulated Time Series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n## [Marginal and Joint Distributions t=8 and s = 9]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n## All Simulated Time Series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n## [Marginal and Joint Distributions t=8 and s = 10]{.r-fit-text}{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-28-1.png){width=960}\n:::\n:::\n\n\n## Visualizing the correlations\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-29-1.png){width=960}\n:::\n:::\n\n\n## Are these all the correlations?\nNo, just pairwise with $x_8$. We could do all possible pairs:\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n## Distribution of all the correlations:\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n# 3D plots\n\n## 3D version of histogram (includes $s-t$ plane)\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-28f05eb496dba0251a8e\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-28f05eb496dba0251a8e\">{\"x\":{\"visdat\":{\"125ef50189dbc\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"125ef50189dbc\",\"attrs\":{\"125ef50189dbc\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"size\":0.10000000000000001,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"s\"},\"yaxis\":{\"title\":\"t\"},\"zaxis\":{\"title\":\"cor\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10],\"y\":[1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10],\"z\":[1,0.059135434472129919,-0.052880953135475917,-0.026905997187335041,0.036017003434894758,0.011140774549022642,0.035990888808339193,0.19959921974974704,-0.050366298868360727,-0.087877374332875971,0.059135434472129919,1,-0.013635852199689269,0.042517517692433032,-0.074283102148410635,0.086607829916864151,0.12068872640020716,0.21046094698567683,-0.15611264192466928,-0.14033899865188521,-0.052880953135475917,-0.013635852199689269,1,-0.017897392622869657,0.0077354664242062108,0.00019108851655491376,-0.13933779696857057,0.049537252674099697,-0.13568074366144287,0.16282741461842651,-0.026905997187335041,0.042517517692433032,-0.017897392622869657,1,0.035496665010936797,-0.1050136145734555,-0.011553056719649853,-0.11050944206283479,0.031457263540661792,0.12051256014611285,0.036017003434894758,-0.074283102148410635,0.0077354664242062108,0.035496665010936797,1,0.064296995556452755,0.10168398301390058,-0.030544352260207342,-0.058536110702862222,0.12925127574573572,0.011140774549022642,0.086607829916864151,0.00019108851655491376,-0.1050136145734555,0.064296995556452755,1,0.03604317982210696,-0.067319265108893619,-0.022105477116285525,0.047383795023455813,0.035990888808339193,0.12068872640020716,-0.13933779696857057,-0.011553056719649853,0.10168398301390058,0.03604317982210696,1,0.080454828353688071,0.074461253775125649,0.024902769242895369,0.19959921974974704,0.21046094698567683,0.049537252674099697,-0.11050944206283479,-0.030544352260207342,-0.067319265108893619,0.080454828353688071,1,-0.23462802881766509,-0.029004058566842572,-0.050366298868360727,-0.15611264192466928,-0.13568074366144287,0.031457263540661792,-0.058536110702862222,-0.022105477116285525,0.074461253775125649,-0.23462802881766509,1,0.07817135282147844,-0.087877374332875971,-0.14033899865188521,0.16282741461842651,0.12051256014611285,0.12925127574573572,0.047383795023455813,0.024902769242895369,-0.029004058566842572,0.07817135282147844,1],\"mode\":\"markers\",\"type\":\"scatter3d\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"size\":[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55],\"sizemode\":\"area\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"textfont\":{\"size\":55},\"error_y\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"error_x\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"line\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## [Simulated auto correlation function $\\hat{\\gamma}_x(h)$ (with a blanket)]{.r-fit-text}\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-22752a7619b4ff3dfe37\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-22752a7619b4ff3dfe37\">{\"x\":{\"visdat\":{\"125ef209a37bd\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"125ef209a37bd\",\"attrs\":{\"125ef209a37bd\":{\"z\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"surface\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"zaxis\":{\"title\":\"cor_mat\"}},\"hovermode\":\"closest\",\"showlegend\":false,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"colorbar\":{\"title\":\"cor_mat\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":true,\"z\":[[1,0.059135434472129919,-0.052880953135475917,-0.026905997187335041,0.036017003434894758,0.011140774549022642,0.035990888808339193,0.19959921974974704,-0.050366298868360727,-0.087877374332875971],[0.059135434472129919,1,-0.013635852199689269,0.042517517692433032,-0.074283102148410635,0.086607829916864151,0.12068872640020716,0.21046094698567683,-0.15611264192466928,-0.14033899865188521],[-0.052880953135475917,-0.013635852199689269,1,-0.017897392622869657,0.0077354664242062108,0.00019108851655491376,-0.13933779696857057,0.049537252674099697,-0.13568074366144287,0.16282741461842651],[-0.026905997187335041,0.042517517692433032,-0.017897392622869657,1,0.035496665010936797,-0.1050136145734555,-0.011553056719649853,-0.11050944206283479,0.031457263540661792,0.12051256014611285],[0.036017003434894758,-0.074283102148410635,0.0077354664242062108,0.035496665010936797,1,0.064296995556452755,0.10168398301390058,-0.030544352260207342,-0.058536110702862222,0.12925127574573572],[0.011140774549022642,0.086607829916864151,0.00019108851655491376,-0.1050136145734555,0.064296995556452755,1,0.03604317982210696,-0.067319265108893619,-0.022105477116285525,0.047383795023455813],[0.035990888808339193,0.12068872640020716,-0.13933779696857057,-0.011553056719649853,0.10168398301390058,0.03604317982210696,1,0.080454828353688071,0.074461253775125649,0.024902769242895369],[0.19959921974974704,0.21046094698567683,0.049537252674099697,-0.11050944206283479,-0.030544352260207342,-0.067319265108893619,0.080454828353688071,1,-0.23462802881766509,-0.029004058566842572],[-0.050366298868360727,-0.15611264192466928,-0.13568074366144287,0.031457263540661792,-0.058536110702862222,-0.022105477116285525,0.074461253775125649,-0.23462802881766509,1,0.07817135282147844],[-0.087877374332875971,-0.14033899865188521,0.16282741461842651,0.12051256014611285,0.12925127574573572,0.047383795023455813,0.024902769242895369,-0.029004058566842572,0.07817135282147844,1]],\"type\":\"surface\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n## [Theoretical $\\hat{\\gamma}_x(h)$ (using the derived formula (with a blanket)]{.r-fit-text}\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-515b79f7d95db561aaa1\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-515b79f7d95db561aaa1\">{\"x\":{\"visdat\":{\"125efe1722bd\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"125efe1722bd\",\"attrs\":{\"125efe1722bd\":{\"z\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"surface\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"zaxis\":{\"title\":\"cor_mat_theoretical\"}},\"hovermode\":\"closest\",\"showlegend\":false,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"colorbar\":{\"title\":\"cor_mat_theoretical\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":true,\"z\":[[1,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1]],\"type\":\"surface\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n# Detrending\n\n## Detrending\nIf a process is trend stationary (nonstationary in the mean, but stationary in the variance), can we just subtract off the trend and get back a stationary time series?\n\nYes, and that's called **detrending**\n\n## [Activity 3: Detrending a commodity (Example 3.7)]{.r-fit-text}{.smaller}\n- Given the code to generate the plot with the trend line, how would you view the equation of the trend line?\n- Visualize the de-trended series\n- Compute the acf of the salmon series and the detrended series. What do you notice?\n\n::: {#Salmon2 .timer seconds=\"300\" starton=\"interaction\"}\n:::\n\n## [Activity 3 Solution: Detrending a commodity (Example 3.7)]{.r-fit-text}{.smaller}\n- Given the code to generate the plot with the trend line, how would you view the equation of the trend line?\n- Visualize the de-trended series\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = salmon ~ time(salmon), na.action = NULL)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.69187 -0.62453 -0.07024  0.51561  2.34959 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -503.08947   34.44164  -14.61   <2e-16 ***\ntime(salmon)    0.25290    0.01713   14.76   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8814 on 164 degrees of freedom\nMultiple R-squared:  0.5706,\tAdjusted R-squared:  0.568 \nF-statistic: 217.9 on 1 and 164 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-35-1.png){width=960}\n:::\n:::\n\n\n## [Detrending a commodity (Example 3.7)]{.r-fit-text}{.smaller}\n- Compute the acf of the salmon series and the de-trended series\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-36-1.png){width=960}\n:::\n:::\n\n\n## Next time\n- Cross-correlation and regression with multiple time series ($x_t$ on x-axis instead of $t$ on x-axis like with the salmon) (Activities at the end of Ch 2)\n- Activities and examples From Chapter 3\n- Smoothing (Section 3.3)",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}