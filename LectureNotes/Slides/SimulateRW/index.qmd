
---
title: "Moving average autocovariance"
author: Julia Schedler
format: revealjs
slide-number: true
scrollable: true
filters: 
  - timer
---

# Simulations

```{r}
set.seed(807)
library(astsa)
Time <- 10
n_sim <- 100
all_series = matrix(rep(NA, times = n_sim*Time), nrow = Time)
for(i in 1:n_sim){
  w  = rnorm(Time)  ## Gaussian white noise
  x  = cumsum(w)
  wd = w +.3 
  xd = cumsum(wd)
  all_series[,i] <- xd
}
fit <- lm(all_series[,1]~time(all_series[,1]), na.action=NULL)
tsplot(all_series[,1], main = "One simulated Time series", type = "b", col = c("black", "blue", rep("black", times = 5), "magenta", "black", "black"), pch = 16, cex = 3)
abline(fit)
```

## All Simulated Time Series

```{r}
#| code-fold: true
tsplot(all_series, spaghetti = TRUE, main = "100 Simuated Trend Stationary Time Series", type = "b")
rect(xleft = 0.5, xright = 1.5, ybottom = -2, ytop = 4, border = "blue", lwd = 2)
rect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = "magenta", lwd = 2)

```

## [Marginal and Joint Distributions t=8 and s = 1]{.r-fit-text} {.smaller}

```{r}
#| code-fold: true
i = 1
x_comp <- all_series[i,]
x_8_all <- all_series[8,]

par(mfrow = c(2,2))
hist(x_comp, col = "blue", main = paste("Histogram of simulations at t=", i), xlab = paste("x_",i))
hist(x_8_all, col = "magenta", main = paste("Histogram of simulations at t=8"), xlab = "x_8")
plot(x_comp, x_8_all, col = "purple", pch = 16, main = "Joint Distribution")
abline(lm(x_8_all~x_comp))
plot(1:10, rep(1, times = 10), pch = "", axes = F, xlab = "", ylab = "")
text(x = 5, y = 1, cex = 2, label = paste("rho(", "i",", 8) = \n cor(x_",i,",x_8) = \n ", round(cor(x_comp,x_8_all),3) ))

```

## All Simulated Time Series

```{r}
#| code-fold: true
tsplot(all_series, spaghetti = TRUE, main = "100 Simuated Trend Stationary Time Series", type = "b")
rect(xleft = 1.5, xright = 2.5, ybottom = -2, ytop = 4, border = "blue", lwd = 2)
rect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = "magenta", lwd = 2)

```

## [Marginal and Joint Distributions t=8 and s = 2]{.r-fit-text} {.smaller}

```{r}
#| code-fold: true
i = 2
x_comp <- all_series[i,]
x_8_all <- all_series[8,]

par(mfrow = c(2,2))
hist(x_comp, col = "blue", main = paste("Histogram of simulations at t=", i), xlab = paste("x_",i))
hist(x_8_all, col = "magenta", main = paste("Histogram of simulations at t=8"), xlab = "x_8")
plot(x_comp, x_8_all, col = "purple", pch = 16, main = "Joint Distribution")
abline(lm(x_8_all~x_comp))
plot(1:10, rep(1, times = 10), pch = "", axes = F, xlab = "", ylab = "")
text(x = 5, y = 1, cex = 2, label = paste("rho(", "i",", 8) = \n cor(x_",i,",x_8) = \n ", round(cor(x_comp,x_8_all),3) ))
```

## All Simulated Time Series

```{r}
#| code-fold: true
tsplot(all_series, spaghetti = TRUE, main = "100 Simuated Trend Stationary Time Series", type = "b")
rect(xleft = 2.5, xright = 3.5, ybottom = -2, ytop = 4, border = "blue", lwd = 2)
rect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = "magenta", lwd = 2)

```

## [Marginal and Joint Distributions t=8 and s = 3]{.r-fit-text} {.smaller}

```{r}
#| code-fold: true
i = 3
x_comp <- all_series[i,]
x_8_all <- all_series[8,]

par(mfrow = c(2,2))
hist(x_comp, col = "blue", main = paste("Histogram of simulations at t=", i), xlab = paste("x_",i))
hist(x_8_all, col = "magenta", main = paste("Histogram of simulations at t=8"), xlab = "x_8")
plot(x_comp, x_8_all, col = "purple", pch = 16, main = "Joint Distribution")
abline(lm(x_8_all~x_comp))
plot(1:10, rep(1, times = 10), pch = "", axes = F, xlab = "", ylab = "")
text(x = 5, y = 1, cex = 2, label = paste("rho(", "i",", 8) = \n cor(x_",i,",x_8) = \n ", round(cor(x_comp,x_8_all),3) ))
```

## All Simulated Time Series

```{r}
#| code-fold: true
tsplot(all_series, spaghetti = TRUE, main = "100 Simuated Trend Stationary Time Series", type = "b")
rect(xleft = 3.5, xright = 4.5, ybottom = -2, ytop = 4, border = "blue", lwd = 2)
rect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = "magenta", lwd = 2)

```

## [Marginal and Joint Distributions t=8 and s = 4]{.r-fit-text} {.smaller}

```{r}
#| code-fold: true
i = 4
x_comp <- all_series[i,]
x_8_all <- all_series[8,]

par(mfrow = c(2,2))
hist(x_comp, col = "blue", main = paste("Histogram of simulations at t=", i), xlab = paste("x_",i))
hist(x_8_all, col = "magenta", main = paste("Histogram of simulations at t=8"), xlab = "x_8")
plot(x_comp, x_8_all, col = "purple", pch = 16, main = "Joint Distribution")
abline(lm(x_8_all~x_comp))
plot(1:10, rep(1, times = 10), pch = "", axes = F, xlab = "", ylab = "")
text(x = 5, y = 1, cex = 2, label = paste("rho(", "i",", 8) = \n cor(x_",i,",x_8) = \n ", round(cor(x_comp,x_8_all),3) ))
```

## All Simulated Time Series

```{r}
#| code-fold: true
tsplot(all_series, spaghetti = TRUE, main = "100 Simuated Trend Stationary Time Series", type = "b")
rect(xleft = 4.5, xright = 5.5, ybottom = -2, ytop = 4, border = "blue", lwd = 2)
rect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = "magenta", lwd = 2)

```

## [Marginal and Joint Distributions t=8 and s = 5]{.r-fit-text} {.smaller}

```{r}
#| code-fold: true
i = 5
x_comp <- all_series[i,]
x_8_all <- all_series[8,]

par(mfrow = c(2,2))
hist(x_comp, col = "blue", main = paste("Histogram of simulations at t=", i), xlab = paste("x_",i))
hist(x_8_all, col = "magenta", main = paste("Histogram of simulations at t=8"), xlab = "x_8")
plot(x_comp, x_8_all, col = "purple", pch = 16, main = "Joint Distribution")
abline(lm(x_8_all~x_comp))
plot(1:10, rep(1, times = 10), pch = "", axes = F, xlab = "", ylab = "")
text(x = 5, y = 1, cex = 2, label = paste("rho(", "i",", 8) = \n cor(x_",i,",x_8) = \n ", round(cor(x_comp,x_8_all),3) ))
```

## All Simulated Time Series

```{r}
#| code-fold: true
tsplot(all_series, spaghetti = TRUE, main = "100 Simuated Trend Stationary Time Series", type = "b")
rect(xleft = 5.5, xright = 6.5, ybottom = -2, ytop = 4, border = "blue", lwd = 2)
rect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = "magenta", lwd = 2)

```

## [Marginal and Joint Distributions t=8 and s = 6]{.r-fit-text} {.smaller}

```{r}
#| code-fold: true
i = 6
x_comp <- all_series[i,]
x_8_all <- all_series[8,]

par(mfrow = c(2,2))
hist(x_comp, col = "blue", main = paste("Histogram of simulations at t=", i), xlab = paste("x_",i))
hist(x_8_all, col = "magenta", main = paste("Histogram of simulations at t=8"), xlab = "x_8")
plot(x_comp, x_8_all, col = "purple", pch = 16, main = "Joint Distribution")
abline(lm(x_8_all~x_comp))
plot(1:10, rep(1, times = 10), pch = "", axes = F, xlab = "", ylab = "")
text(x = 5, y = 1, cex = 2, label = paste("rho(", "i",", 8) = \n cor(x_",i,",x_8) = \n ", round(cor(x_comp,x_8_all),3) ))
```

## All Simulated Time Series

```{r}
#| code-fold: true
tsplot(all_series, spaghetti = TRUE, main = "100 Simuated Trend Stationary Time Series", type = "b")
rect(xleft = 6.5, xright = 7.5, ybottom = -2, ytop = 4, border = "blue", lwd = 2)
rect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = "magenta", lwd = 2)

```

## [Marginal and Joint Distributions t=8 and s = 7]{.r-fit-text} {.smaller}

```{r}
#| code-fold: true
i = 7
x_comp <- all_series[i,]
x_8_all <- all_series[8,]

par(mfrow = c(2,2))
hist(x_comp, col = "blue", main = paste("Histogram of simulations at t=", i), xlab = paste("x_",i))
hist(x_8_all, col = "magenta", main = paste("Histogram of simulations at t=8"), xlab = "x_8")
plot(x_comp, x_8_all, col = "purple", pch = 16, main = "Joint Distribution")
abline(lm(x_8_all~x_comp))
plot(1:10, rep(1, times = 10), pch = "", axes = F, xlab = "", ylab = "")
text(x = 5, y = 1, cex = 2, label = paste("rho(", "i",", 8) = \n cor(x_",i,",x_8) = \n ", round(cor(x_comp,x_8_all),3) ))
```

## All Simulated Time Series

```{r}
#| code-fold: true
tsplot(all_series, spaghetti = TRUE, main = "100 Simuated Trend Stationary Time Series", type = "b")
rect(xleft = 7.3, xright = 8.3, ybottom = -.7, ytop = 5.2, border = "blue", lwd = 2)
rect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = "magenta", lwd = 2)

```

## [Marginal and Joint Distributions t=8 and s = 8]{.r-fit-text} {.smaller}

```{r}
#| code-fold: true
i = 8
x_comp <- all_series[i,]
x_8_all <- all_series[8,]

par(mfrow = c(2,2))
hist(x_comp, col = "blue", main = paste("Histogram of simulations at t=", i), xlab = paste("x_",i))
hist(x_8_all, col = "magenta", main = paste("Histogram of simulations at t=8"), xlab = "x_8")
plot(x_comp, x_8_all, col = "purple", pch = 16, main = "Joint Distribution")
abline(lm(x_8_all~x_comp))
plot(1:10, rep(1, times = 10), pch = "", axes = F, xlab = "", ylab = "")
text(x = 5, y = 1, cex = 2, label = paste("rho(", "i",", 8) = \n cor(x_",i,",x_8) = \n ", round(cor(x_comp,x_8_all),3) ))
```

## All Simulated Time Series

```{r}
#| code-fold: true
tsplot(all_series, spaghetti = TRUE, main = "100 Simuated Trend Stationary Time Series", type = "b")
rect(xleft = 8.5, xright = 9.5, ybottom = -1.5, ytop = 5, border = "blue", lwd = 2)
rect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = "magenta", lwd = 2)

```

## [Marginal and Joint Distributions t=8 and s = 9]{.r-fit-text} {.smaller}

```{r}
#| code-fold: true
i = 9
x_comp <- all_series[i,]
x_8_all <- all_series[8,]

par(mfrow = c(2,2))
hist(x_comp, col = "blue", main = paste("Histogram of simulations at t=", i), xlab = paste("x_",i))
hist(x_8_all, col = "magenta", main = paste("Histogram of simulations at t=8"), xlab = "x_8")
plot(x_comp, x_8_all, col = "purple", pch = 16, main = "Joint Distribution")
abline(lm(x_8_all~x_comp))
plot(1:10, rep(1, times = 10), pch = "", axes = F, xlab = "", ylab = "")
text(x = 5, y = 1, cex = 2, label = paste("rho(", "i",", 8) = \n cor(x_",i,",x_8) = \n ", round(cor(x_comp,x_8_all),3) ))
```

## All Simulated Time Series

```{r}
#| code-fold: true
tsplot(all_series, spaghetti = TRUE, main = "100 Simuated Trend Stationary Time Series", type = "b")
rect(xleft = 9.5, xright = 10.5, ybottom = 0, ytop = 5.5, border = "blue", lwd = 2)
rect(xleft = 7.5, xright = 8.5, ybottom = -.5, ytop = 5, border = "magenta", lwd = 2)

```

## [Marginal and Joint Distributions t=8 and s = 10]{.r-fit-text} {.smaller}

```{r}
#| code-fold: true
i = 10
x_comp <- all_series[i,]
x_8_all <- all_series[8,]

par(mfrow = c(2,2))
hist(x_comp, col = "blue", main = paste("Histogram of simulations at t=", i), xlab = paste("x_",i))
hist(x_8_all, col = "magenta", main = paste("Histogram of simulations at t=8"), xlab = "x_8")
plot(x_comp, x_8_all, col = "purple", pch = 16, main = "Joint Distribution")
abline(lm(x_8_all~x_comp))
plot(1:10, rep(1, times = 10), pch = "", axes = F, xlab = "", ylab = "")
text(x = 5, y = 1, cex = 2, label = paste("gamma(", "i",", 8) = \n cor(x_",i,",x_8) = \n ", round(cor(x_comp,x_8_all),3) ))
```

## Visualizing the correlations

```{r}
#| code-fold: true
cors <- apply(all_series, 1, function(x){cor(x, all_series[8,])})
hist(cors, breaks = seq(-1, 1, by = .1), main = "Correlation between simulations for x_8 and x_i")
```

## Are these all the correlations?

No, just pairwise with $x_8$. We could do all possible pairs:

```{r}
#| code-fold: true
library(GGally)
ggpairs(data.frame(t(all_series)))
```

## Distribution of all the correlations:

```{r}
#| code-fold: true
coords <- t(combn(10,2))
cors <- NULL
for(i in 1:nrow(coords)){
  cors <- c(cors, cor(all_series[coords[i,1],], all_series[coords[i,2],]))
}
cors <- c(cors, rep(1, times = 10))
hist(cors, breaks = seq(-1, 1, by = .1), main = "Correlation between simulations for x_s and x_t")
```

# 3D plots

## 3D version of histogram (includes $s-t$ plane)

```{r}
#| code-fold: true
coords <- expand.grid(1:Time, 1:Time)
names(coords) <- c("s", "t") 
coords$cor <- NA
coords$pval <- NA
cor_mat_theoretical <- cor_mat <- matrix(rep(NA, times = Time*Time), nrow = Time)
for(i in 1:nrow(coords)){
  out <- cor.test((all_series[coords[i,1],]), (all_series[coords[i,2],]))
  if(coords[i,1]==coords[i,2]){
    coords$cor[i] <- 1
    coords$pval[i] <- 0
    cor_mat[coords[i,1], coords[i,2]] <- 1
    cor_mat_theoretical[coords[i,1], coords[i,2]] <- 1
  }else{
    coords$cor[i] <- out$estimate
    coords$pval[i] <- out$p.value
    cor_mat[coords[i,1], coords[i,2]] <- out$estimate
    cor_mat_theoretical[coords[i,1], 
                        coords[i,2]] <- min(coords[i,1], coords[i,2])/(coords[i,1]*coords[i,2]*1) ##sigma^2_2 = 1
    
  }
}

library(plotly)
plot_ly(coords,
        x= ~s, y=~t, z=~cor, 
        type = 'scatter3d', mode = "markers", size = .1)
```

## [Simulated auto correlation function $\hat{\gamma}_x(h)$ (with a blanket)]{.r-fit-text}

```{r}
#| code-fold: true
## "drape a blanket over it to see the pattern better"
fig <- plot_ly(z = ~cor_mat)
fig %>% add_surface()
```

## [Theoretical $\hat{\gamma}_x(h)$ (using the derived formula (with a blanket)]{.r-fit-text}

```{r}
#| code-fold: true
# Theoretical function
fig <- plot_ly(z = ~cor_mat_theoretical)
fig %>% add_surface()

```
